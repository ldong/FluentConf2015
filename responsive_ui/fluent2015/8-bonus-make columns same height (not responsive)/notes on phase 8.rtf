{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww11560\viewh12300\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs28 \cf0 Phase 8: Bonus! Fix those columns that just won\'92t go to the same height\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 I know those columns with the equal-height problem have been driving you CRAZY. I wanted to be sure to get through all of the most important material first, so if there\'92s time, I\'92ll show you how you can make your columns equal height and get around the wrapping problem the grid is introducing.\
\
1. Download grids.min.js from here:\
{\field{\*\fldinst{HYPERLINK "https://github.com/Sam152/Javascript-Equal-Height-Responsive-Rows"}}{\fldrslt https://github.com/Sam152/Javascript-Equal-Height-Responsive-Rows}}\
\
Save in your js folder.\
\
2. You will need jQuery to make this code work. Also, grids.min.js must be in the head of the document, not near </body>. Therefore, we\'92ll load jQuery in the head of the document as well. \
\
Link to jQuery and to grids.min.js BEFORE the PictureFill code, around lines 10-11.\
\
<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>"\
<script src="js/grids.min.js"></script>\
\
3. Select the elements that need to be equal height. In this case, each of our elements has a class of col-1-2, so let\'92s leverage that to bind the grids JS. \
\
                  jQuery(function($) \{\
			$('.col-1-2').responsiveEqualHeightGrid();	\
		\});\
\
This can be combined with the <script> tag that already exists for PictureFill:\
\
	<script>\
		jQuery(function($) \{\
			$('.col-1-2').responsiveEqualHeightGrid();	\
		\});\
		// Picture element HTML5 shiv\
		document.createElement( "picture" );\
	</script>}